@model Gestion_Parc.ViewModel.StatisticViewModel
@using System.Linq
@{
    ViewData["Title"] = "Materials";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-12">
                <h1 class="alert alert-warning">Statistiques</h1>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-6">

                <!-- DONUT CHART -->
                <div class="card card-danger">
                    <div class="card-header">
                        <h3 class="card-title">Materiels</h3>
                    </div>
                    <div class="card-body">
                        <canvas id="donutChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                    </div>
                    <!-- /.card-body -->
                </div>
            </div>
            <div class="col-md-6">
                <!-- PIE CHART -->
                <div class="card card-danger">
                    <div class="card-header">
                        <h3 class="card-title">Materiaux inutilises</h3>
                    </div>
                    <div class="card-body">
                        <canvas id="donutChart1" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
           
        </div>
        <br />
        <div class="row">
            <div class="col-md-6">
                <!-- PIE CHART -->
                <div class="card card-danger">
                    <div class="card-header">
                        <h3 class="card-title">Pannes</h3>
                    </div>
                    <div class="card-body">
                        <canvas id="pieChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <div class="col-md-6">

                <!-- DONUT CHART -->
                <div class="card card-danger">
                    <div class="card-header">
                        <h3 class="card-title">Pannes Status</h3>
                    </div>
                    <div class="card-body">
                        <canvas id="pieChart1" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                    </div>
                    <!-- /.card-body -->
                </div>
            </div>
        </div>
    </div>
</section>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>



<script>
    //- DONUT CHART -
    //-------------
    // Get context with jQuery - using jQuery's .get() method.
    var donutChartCanvas = $('#donutChart').get(0).getContext('2d')
    var donutData = {
        labels: [
            'Computers',
            'Printers',
            'Servers',
            'Others'
        ],
        datasets: [
            {
                data: [@Model.Computers.Count, @Model.Printers.Count, @Model.Servers.Count, @Model.Others.Count],
                backgroundColor: ['#f56954', '#d0c9d1', '#a0b357', '#ad7329'],
            }
        ]
    }
    var donutOptions = {
        maintainAspectRatio: false,
        responsive: true,
    }
    //Create pie or douhnut chart
    // You can switch between pie and douhnut using the method below.
    new Chart(donutChartCanvas, {
        type: 'doughnut',
        data: donutData,
        options: donutOptions
    })
    //-------------


    //- PIE CHART -
    //-------------
    // Get context with jQuery - using jQuery's .get() method.
    var pieChartCanvas = $('#pieChart').get(0).getContext('2d')
    var donutData1 = {
        labels: [
            'Computers',
            'Printers',
            'Servers',
            'Others'
        ],
        datasets: [
            {
                data: [@Model.CopmuterBreakDowns.Count, @Model.PrintersBreakDowns.Count, @Model.ServerBreakDowns.Count, @Model.OthersBreakDowns.Count],
                backgroundColor: ['#c61cec', '#28c64d', '#faf90c', '#2e32c6'],
            }
        ]
    }

    var pieData = donutData1;
    var pieOptions = {
        maintainAspectRatio: false,
        responsive: true,
    }
    //Create pie or douhnut chart
    // You can switch between pie and douhnut using the method below.
    new Chart(pieChartCanvas, {
        type: 'pie',
        data: pieData,
        options: pieOptions
    })

    //-------------

    //- DONUT CHART -
    //-------------
    // Get context with jQuery - using jQuery's .get() method.
    var donutChartCanvas1 = $('#donutChart1').get(0).getContext('2d')
    var donutData2 = {
        labels: [
            'Computers',
            'Printers',
            'Servers',
            'Others'
        ],
        datasets: [
            {
                data: [@Model.Computers.Count, @Model.UnusedPrinter.Count, @Model.UnusedServer.Count, @Model.UnusedOther.Count],
                backgroundColor: ['#fff3cd', '#664d03', '#26a19b', '#e818d4'],
            }
        ]
    }
    var donutOptions = {
        maintainAspectRatio: false,
        responsive: true,
    }
    //Create pie or douhnut chart
    // You can switch between pie and douhnut using the method below.
    new Chart(donutChartCanvas1, {
        type: 'doughnut',
        data: donutData2,
        options: donutOptions
    })

    //-------------

    //- PIE CHART -
    //-------------
    // Get context with jQuery - using jQuery's .get() method.
    var pieChartCanvas = $('#pieChart1').get(0).getContext('2d')
    var donutData3 = {
        labels: [
            'Reported',
            'In Progress',
            'Completed'
        ],
        datasets: [
            {
                data: [@Model.AllReported.Count, @Model.AllProgressed.Count, @Model.AllCompleted.Count],
                backgroundColor: ['#e22335', '#faf90c', '#28c64d'],
            }
        ]
    }

    var pieData1 = donutData3;
    var pieOptions = {
        maintainAspectRatio: false,
        responsive: true,
    }
    //Create pie or douhnut chart
    // You can switch between pie and douhnut using the method below.
    new Chart(pieChartCanvas, {
        type: 'pie',
        data: pieData1,
        options: pieOptions
    })

</script>
